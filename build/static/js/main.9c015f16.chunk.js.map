{"version":3,"sources":["store/posts.js","components/comment.js","actions.js","components/commentsList.js","components/post.js","store/loading.js","store/loaded.js","components/postList.js","api/loadApi.js","App.js","store/index.js","index.js"],"names":["getPosts","state","posts","getDeletePosts","getDeleteComment","mapDispatchToProps","removeComment","id","type","connect","_ref","title","body","email","react_default","a","createElement","className","Delete_default","onClick","href","CommentsList","comments","map","comment","components_comment","key","name","deleteSinglePost","userName","address","DeleteForever_default","commentsList","getLoading","loading","getIsLoaded","isLoaded","useStyles","makeStyles","theme","margin","spacing","extendedIcon","marginRight","PostList","loadingData","classes","post","components_post","user","concat","city","street","Fragment","Button","variant","color","size","regenerator_default","async","_context","prev","next","awrap","stop","dispatch","_ref2","postsFromServer","usersFromServer","commentsFromServer","Promise","all","fetch","then","response","json","catch","sent","Object","slicedToArray","objectSpread2","find","person","userId","filter","postId","defaultProps","App","postList","rootReducer","combineReducers","arguments","length","undefined","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9c015f16.chunk.js","sourcesContent":["import { DELETE_COMMENT, DELETE_POST, HANDLE_SUCCESS } from '../actions';\n\nexport const getPosts = state => state.posts;\nexport const getDeletePosts = state => state.posts;\nexport const getDeleteComment = state => state.posts;\n\nexport const postReducer = (state = [], action) => {\n  switch (action.type) {\n    case HANDLE_SUCCESS:\n      return {\n        posts: action.posts,\n      };\n    case DELETE_POST:\n      return {\n        posts: state.posts.filter(post => post.id !== action.id),\n      };\n    case DELETE_COMMENT:\n      return {\n        posts: state.posts.map(post => (\n          {\n            ...post,\n            comments: post.comments.filter(comment => comment.id !== action.id),\n          })),\n      };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { deleteComment } from '../actions';\nimport { getDeleteComment } from '../store/posts';\n\nconst SingleComment = ({ title, body, email, id, removeComment }) => (\n  <section className=\"comment\">\n    <h4 className=\"comment__header\">\n      <DeleteIcon\n        className=\"button_delete\"\n        onClick={() => removeComment(id)}\n      />\n      {title}\n    </h4>\n    <article>{body}</article>\n    <a\n      className=\"comment__email\"\n      href=\"/#\"\n    >\n      {email}\n    </a>\n\n  </section>\n);\n\nconst mapStateToProps = state => ({\n  posts: getDeleteComment(state.posts),\n});\n\nconst mapDispatchToProps = {\n  removeComment: deleteComment,\n};\n\nSingleComment.propTypes = {\n  title: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  removeComment: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SingleComment);\n","import { getPosts, getUsers, getComments } from './api/loadApi';\n\nexport const START_LOADING = 'START_LOADING';\nexport const HANDLE_SUCCESS = 'HANDLE_SUCCESS';\nexport const DELETE_POST = 'DELETE_POST';\nexport const DELETE_COMMENT = 'DELETE_COMMENT';\nexport const LOADING = 'LOADING';\n\nconst startLoading = () => ({ type: START_LOADING });\nconst loadingProcess = () => ({ type: LOADING });\nconst handleSuccess = posts => ({\n  type: HANDLE_SUCCESS, posts,\n});\n\nexport const loadPosts = () => async(dispatch) => {\n  dispatch(loadingProcess());\n\n  const [\n    postsFromServer,\n    usersFromServer,\n    commentsFromServer,\n  ] = await Promise.all([\n    getPosts(),\n    getUsers(),\n    getComments(),\n  ]);\n\n  dispatch(handleSuccess(postsFromServer.map(post => (\n    {\n      ...post,\n      user: usersFromServer.find(person => person.id === post.userId),\n      comments: commentsFromServer\n        .filter(comment => comment.postId === post.id),\n    }))));\n\n  dispatch(startLoading());\n};\n\nexport const deletePost = id => ({\n  type: DELETE_POST, id,\n});\n\nexport const deleteComment = id => ({\n  type: DELETE_COMMENT, id,\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SingleComment from './comment';\n\nconst CommentsList = ({ comments }) => (\n  <article>\n    <h3>Comments:</h3>\n    {comments.map(comment => (\n      <SingleComment\n        key={comment.id}\n        id={comment.id}\n        title={comment.name}\n        body={comment.body}\n        email={comment.email}\n      />\n    ))}\n  </article>\n);\n\nCommentsList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    body: PropTypes.string,\n    email: PropTypes.string,\n    id: PropTypes.number,\n    name: PropTypes.string,\n    postId: PropTypes.number,\n  })).isRequired,\n};\n\nexport default CommentsList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport CommentsList from './commentsList';\nimport { deletePost } from '../actions';\nimport { getDeletePosts } from '../store/posts';\n\nconst Post = ({\n  id,\n  title,\n  body,\n  userName,\n  email,\n  address,\n  comments,\n  deleteSinglePost,\n}) => (\n  <article className=\"post\">\n    <h2 className=\"post__title\">\n      <DeleteForeverIcon\n        className=\"button_delete\"\n        onClick={() => deleteSinglePost(id)}\n      />\n      {title}\n    </h2>\n    <p className=\"post__body\">{body}</p>\n    <p className=\"post__user\">\n      Author:&nbsp;\n      {userName}\n    </p>\n    <address className=\"post__address\">{address}</address>\n    <a className=\"post__email\" href=\"/#\">{email}</a>\n    <div className=\"post__comments\">\n      <CommentsList comments={comments} />\n    </div>\n  </article>\n);\n\nconst mapStateToProps = state => ({\n  posts: getDeletePosts(state),\n});\n\nconst mapDispatchToProps = {\n  deleteSinglePost: deletePost,\n};\n\nPost.propTypes = {\n  body: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n  userName: PropTypes.string.isRequired,\n  comments: PropTypes.arrayOf(PropTypes.shape({\n    body: PropTypes.string,\n    email: PropTypes.string,\n    id: PropTypes.number,\n    name: PropTypes.string,\n    postId: PropTypes.number,\n  })).isRequired,\n  address: PropTypes.string.isRequired,\n  deleteSinglePost: PropTypes.func.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Post);\n","import { LOADING, START_LOADING } from '../actions';\n\nexport const getLoading = state => state.loading;\nexport const getIsLoaded = state => state.isLoaded;\n\nexport const loadingReducer = (state = {\n  loading: false,\n  isLoaded: false,\n}, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return {\n        ...state,\n        isLoaded: true,\n      };\n    case LOADING:\n      return {\n        ...state,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n};\n","import { START_LOADING } from '../actions';\n\nexport const getIsLoaded = state => state.isLoaded;\n\nexport const loadedReducer = (state = {\n  isLoaded: false,\n}, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return {\n        isLoaded: true,\n      };\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { loadPosts } from '../actions';\nimport Post from './post';\nimport { getPosts } from '../store/posts';\nimport { getLoading } from '../store/loading';\nimport { getIsLoaded } from '../store/loaded';\n\nconst useStyles = makeStyles(theme => ({\n  margin: {\n    margin: theme.spacing(1),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n}));\n\nconst PostList = ({ isLoaded, loading, loadingData, posts }) => {\n  const loadData = async() => {\n    await loadingData();\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div>\n      { isLoaded\n        ? (\n          <section className=\"main\">\n            {posts.map(post => (\n              <Post\n                key={post.id}\n                id={post.id}\n                title={post.title}\n                body={post.body}\n                userName={post.user.name}\n                email={post.user.email}\n                address={`${post.user.address.city}, \n                ${post.user.address.street}`}\n                comments={post.comments}\n              />\n            ))}\n          </section>\n        ) : (\n          <div className=\"load\">\n            { loading ? (\n              <>\n                <div className=\"loadingio-spinner-double-ring-9q7pnd89ma7\">\n                  <div className=\"ldio-825x8t7zp7o\">\n                    <div />\n                    <div />\n                    <div>\n                      <div />\n                    </div>\n                    <div>\n                      <div />\n                    </div>\n                  </div>\n                </div>\n              </>\n            ) : (\n              <Button\n                variant=\"outlined\"\n                color=\"secondary\"\n                size=\"large\"\n                className={classes.margin}\n                onClick={loadData}\n              >\n                Load\n              </Button>\n\n            )}\n          </div>\n        )}\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  posts: getPosts(state.posts),\n  isLoaded: getIsLoaded(state.isLoaded),\n  loading: getLoading(state.loading),\n});\n\nconst mapDispatchToProps = {\n  loadingData: loadPosts,\n};\n\nPostList.propTypes = {\n  isLoaded: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired,\n  loadingData: PropTypes.func.isRequired,\n  posts: PropTypes.arrayOf(PropTypes.shape({\n    body: PropTypes.string.isRequired,\n    comments: PropTypes.arrayOf(PropTypes.object),\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    user: PropTypes.objectOf(PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.number,\n      PropTypes.object,\n    ])),\n  })),\n};\n\nPostList.defaultProps = {\n  posts: [],\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PostList);\n","// eslint-disable-next-line max-len\nexport const getPosts = () => fetch('https://jsonplaceholder.typicode.com/posts')\n  .then(response => response.json())\n  .catch(() => 'Something went wrong');\n\n// eslint-disable-next-line max-len\nexport const getUsers = () => fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json())\n  .catch(() => 'Something went wrong');\n\n// eslint-disable-next-line max-len\nexport const getComments = () => fetch('https://jsonplaceholder.typicode.com/comments')\n  .then(response => response.json())\n  .catch(() => 'Something went wrong');\n","import React from 'react';\nimport './App.css';\nimport PostList from './components/postList';\n\nfunction App() {\n  return (\n    <section>\n      <PostList />\n    </section>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { postReducer } from './posts';\nimport { loadingReducer } from './loading';\nimport { loadedReducer } from './loaded';\n\nconst rootReducer = combineReducers({\n  posts: postReducer,\n  isLoaded: loadedReducer,\n  loading: loadingReducer,\n});\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store/index';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n  , document.getElementById('root')\n);\n"],"sourceRoot":""}